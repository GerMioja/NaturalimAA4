package com.naturalim.demo.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.naturalim.demo.interfaces.IProductoRopa;
import com.naturalim.demo.models.ProductoAlimentos;
import com.naturalim.demo.models.ProductoRopa;
import com.naturalim.demo.models.Response;
import com.naturalim.demo.models.ResponseFile;

@Component
public class ProductoRopaService implements IProductoRopaService {
	
	@Autowired
	private IProductoRopa productoRopaRepository;
	
	@Autowired
	private IFileGeneric fileGeneric;
	
	@Override
	public Response<ProductoRopa>ObtenerListaProductoRopa(){
		
		Response<ProductoRopa> response = new Response<>();
		try {
			response.setEstado(true);
			response.setListData((List<ProductoRopa>) productoRopaRepository.findAll());
			
		} catch (Exception e) {
			response.setEstado(false);
			response.setMensajeError(e.getStackTrace().toString());
		}
		return response;
	}

	@Override
	public Response<ProductoRopa> CrearProductoRopa(ProductoRopa productoRopa, MultipartFile fileProductoRopa) {
		
		Response<ProductoRopa> response = new Response<>();
		ResponseFile responseFile = new ResponseFile();

		try {
			if (fileProductoRopa!= null) {
				
				if (productoRopa.getUriImagen() != null) {
					fileGeneric.eliminarFile(productoRopa.getUriImagen());						
				}
				
				responseFile = fileGeneric.guardarFile(fileProducto);
				if (responseFile.getEstado()) {
					productoRopa.setUriImagen(responseFile.getNombreFile());
				}else {
					response.setEstado(responseFile.getEstado());
					response.setMensaje("IMG-ERROR - error al procesar el archivo "+responseFile.getNombreFile());
					response.setMensajeError(responseFile.getMensajeError());
					return response;
				}
			}

			ProductoAlimentos p = productoAlimentosRepository.save(productoRopa);
			response.setEstado(true);
			response.setData(p);
			response.setListData((List<ProductoAlimentos>) productoAlimentosRepository.findAll());
			

		} catch (Exception e) {
			response.setEstado(false);
			response.setMensajeError(e.getStackTrace().toString());
		}
		return response;
	}

	@Override
	public Response<ProductoRopa> EditarProductoRopa(Integer id) {
		Response<ProductoRopa> response = new Response<>();

		try {
			Optional<ProductoRopa> p = productoRopaRepository.findById(id);

			response.setEstado(true);
			response.setData(p.get());
			response.setMensaje("Actualizando el producto " + p.get().getNombre());

		} catch (Exception e) {
			response.setEstado(false);
			response.setMensaje("Ocurrió un error actualizar el producto");
			response.setMensajeError(e.getStackTrace().toString());
		}
		return response;
	}

	@Override
	public Response<ProductoRopa> EliminarProductoRopa(Integer id) {
		Response<ProductoRopa> response = new Response<>();
		
		try {	
			Optional<ProductoRopa> p = productoRopaRepository.findById(id);
			productoRopaRepository.deleteById(id);		
			response.setEstado(true);
			response.setData(p.get());
			response.setMensaje("El producto "+p.get().getNombre()+" ha sido eliminado");
		}catch (Exception e) {
			response.setEstado(false);
			response.setMensaje("Ocurrió un error al eliminar el producto");
			response.setMensajeError(e.getStackTrace().toString());	
		}		
		return response;
	}
	
	
}
