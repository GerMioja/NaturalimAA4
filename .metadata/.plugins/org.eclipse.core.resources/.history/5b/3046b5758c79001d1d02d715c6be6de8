package com.naturalim.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.multipart.MultipartFile;

import com.naturalim.demo.models.ProductoAlimentos;
import com.naturalim.demo.models.Response;
import com.naturalim.demo.service.IProductoAlimentosService;

@Controller
@RequestMapping("/app")
@SessionAttributes("productoAlimentos")
public class AlimentosController {
	
	@Value("${titlePage.param}")
	private String titlePage;
	
	@Value("${mensaje.param}")
	private String mensaje;
	
	@Autowired 
	private IProductoAlimentosService IpService;
	
	@GetMapping("/alimentos")
	public String ListarProductoAlimentos(Model model) {
		model.addAttribute("titlePage", titlePage);
		model.addAttribute("mensaje", mensaje);
		Response<ProductoAlimentos> response = IpService.ObtenerListaProductoAlimentos();
		
		if (response.getEstado()) {
			model.addAttribute("titulo", "Productos Alimentos Naturalim");
			model.addAttribute("ListaProductoAlimentos", response.getListData());
			return "alimentos";
		} else {
			model.addAttribute("titulo", "Spring Framework - Control de Errores");
			model.addAttribute("errores", response.getMensajeError());
			return "errores";
		}
	}
	
	@GetMapping("/aform")
	public String FormularioProductoAlimentos(Model model) {

		ProductoAlimentos productoAlimentos = new ProductoAlimentos();

		model.addAttribute("titlePage", titlePage);
		model.addAttribute("titulo", "Naturalim - Registro de Productos");

		model.addAttribute("productoAlimentos", productoAlimentos);

		return "alimentosForm";
	}
	
	@PostMapping("/aNuevoform")
	public String CrearFormulario(@Validated ProductoAlimentos productoAlimentos, BindingResult br, Model model,@RequestParam("fileImagen") MultipartFile imgProducto, SessionStatus status) {

		if (br.hasErrors()) {
			return "alimentosForm";
		}
		
		if (imgProducto.isEmpty() && productoAlimentos.getUriImagen() == null) {
			model.addAttribute("titlePage", titlePage);
			return "alimentosForm";
		}
		
		model.addAttribute("titlePage", titlePage);
		Response<ProductoAlimentos> response = IpService.CrearProductoAlimentos(productoAlimentos, imgProducto);

		if (response.getEstado()) {
			model.addAttribute("ListaProductos", response.getListData());
			model.addAttribute("respuesta", response.getMensaje());

			status.setComplete();
			return "alimentos";
		} else {
			
			if (response.getMensaje().equals("IMG-ERROR")) {
				return "alimentosForm";
			}else {
				model.addAttribute("respuesta", response.getMensaje());
				model.addAttribute("errores", response.getMensajeError());
	
				status.setComplete();
				return "errores";
			}
		}
	}
	
	@GetMapping("/aEditar/{id}")
	public String editarProductoAlimentos(@PathVariable int id, Model model) {
		
		model.addAttribute("titlePage", titlePage);
		Response<ProductoAlimentos> response = IpService.EditarProductoAlimentos(id);

		if (response.getEstado()) {
			model.addAttribute("titulo", "Naturalim - "+response.getMensaje());			
			model.addAttribute("productoAlimentos", response.getData());
			return "alimentosForm";
		} else {
			model.addAttribute("titulo", "Naturalim - Control de Errores");
			model.addAttribute("respuesta", response.getMensaje());
			model.addAttribute("errores", response.getMensajeError());

			return "errores";
		}
	}
	
	@GetMapping("/aEliminar/{id}")
	public String eliminarProductoAlimentos(@PathVariable int id, Model model) {
		
		model.addAttribute("titlePage", titlePage);
		Response<ProductoAlimentos> response = IpService.EliminarProductoAlimentos(id);

		if (response.getEstado()) {
			model.addAttribute("titulo", "Naturalim - "+response.getMensaje());	
			model.addAttribute("respuesta", response.getMensaje());
			return "redirect:/app/alimentos";
		} else {
			model.addAttribute("titulo", "Naturalim - Control de Errores");
			model.addAttribute("respuesta", response.getMensaje());
			model.addAttribute("errores", response.getMensajeError());

			return "errores";
		}		
	}
	
}
